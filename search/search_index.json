{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"gym-sapientino OpenAI Gym Sapientino environment using Pygame. Description The environment is inspired by a game for kids called Sapientino . A robot moves on a gridworld-like environment, where each cell can be coloured. When a robot is on a coloured cell, it can run a beep , meaning it has visited the cell. The environment is compliant with the OpenAI Gym APIs. The idea is that the designer of the experiment should implement the actual reward by wrapping the environment. Dependencies The environment is implemented using Pygame. On Ubuntu, you need the following libraries: sudo apt-get install python3-dev \\ libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev libsmpeg-dev \\ libsdl1.2-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev libfreetype6-dev On MacOS (not tested): brew install sdl sdl_ttf sdl_image sdl_mixer portmidi # brew or use equivalent means conda install -c https://conda.binstar.org/quasiben pygame # using Anaconda Install Install with pip : pip install gym_sapientino Or, install from source: git clone https://github.com/whitemech/gym-sapientino.git cd gym-sapientino pip install . Development clone the repo: git clone https://github.com/whitemech/gym-sapientino.git cd gym-sapientino Create/activate the virtual environment: poetry shell --python = python3.7 Install development dependencies: poetry install Tests To run tests: tox To run only the code tests: tox -e py3.7 To run only the linters: - tox -e flake8 - tox -e mypy - tox -e black-check - tox -e isort-check Please look at the tox.ini file for the full list of supported commands. Docs To build the docs: mkdocs build To view documentation in a browser: mkdocs serve and then go to http://localhost:8000 License gym-sapientino is released under the GNU General Public License v3.0 or later (GPLv3+). Copyright 2019-2020 Marco Favorito, Luca Iocchi Authors Luca Iocchi Marco Favorito Credits The code is largely inspired by RLGames","title":"Home"},{"location":"#description","text":"The environment is inspired by a game for kids called Sapientino . A robot moves on a gridworld-like environment, where each cell can be coloured. When a robot is on a coloured cell, it can run a beep , meaning it has visited the cell. The environment is compliant with the OpenAI Gym APIs. The idea is that the designer of the experiment should implement the actual reward by wrapping the environment.","title":"Description"},{"location":"#dependencies","text":"The environment is implemented using Pygame. On Ubuntu, you need the following libraries: sudo apt-get install python3-dev \\ libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev libsmpeg-dev \\ libsdl1.2-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev libfreetype6-dev On MacOS (not tested): brew install sdl sdl_ttf sdl_image sdl_mixer portmidi # brew or use equivalent means conda install -c https://conda.binstar.org/quasiben pygame # using Anaconda","title":"Dependencies"},{"location":"#install","text":"Install with pip : pip install gym_sapientino Or, install from source: git clone https://github.com/whitemech/gym-sapientino.git cd gym-sapientino pip install .","title":"Install"},{"location":"#development","text":"clone the repo: git clone https://github.com/whitemech/gym-sapientino.git cd gym-sapientino Create/activate the virtual environment: poetry shell --python = python3.7 Install development dependencies: poetry install","title":"Development"},{"location":"#tests","text":"To run tests: tox To run only the code tests: tox -e py3.7 To run only the linters: - tox -e flake8 - tox -e mypy - tox -e black-check - tox -e isort-check Please look at the tox.ini file for the full list of supported commands.","title":"Tests"},{"location":"#docs","text":"To build the docs: mkdocs build To view documentation in a browser: mkdocs serve and then go to http://localhost:8000","title":"Docs"},{"location":"#license","text":"gym-sapientino is released under the GNU General Public License v3.0 or later (GPLv3+). Copyright 2019-2020 Marco Favorito, Luca Iocchi","title":"License"},{"location":"#authors","text":"Luca Iocchi Marco Favorito","title":"Authors"},{"location":"#credits","text":"The code is largely inspired by RLGames","title":"Credits"},{"location":"authors/","text":"Credits Authors Luca Iocchi < iocchi@diag.uniroma1.it > Marco Favorito < favorito@diag.uniroma1.it > Contributors None yet. Why not be the first ?","title":"Authors"},{"location":"authors/#credits","text":"","title":"Credits"},{"location":"authors/#authors","text":"Luca Iocchi < iocchi@diag.uniroma1.it > Marco Favorito < favorito@diag.uniroma1.it >","title":"Authors"},{"location":"authors/#contributors","text":"None yet. Why not be the first ?","title":"Contributors"},{"location":"contributing/","text":"Contributing Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. If you need support, want to report/fix a bug, ask for/implement features, you can check the Issues page or submit a Pull request . For other kinds of feedback, you can contact one of the authors by email.","title":"How to contribute"},{"location":"contributing/#contributing","text":"Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. If you need support, want to report/fix a bug, ask for/implement features, you can check the Issues page or submit a Pull request . For other kinds of feedback, you can contact one of the authors by email.","title":"Contributing"},{"location":"history/","text":"History 0.1.1 (2020-09-20) Refactoring of the repository. Added usage of linters for code-style checks. Improved CI. 0.1.0 (2020-04-04) First release on PyPI.","title":"Release History"},{"location":"history/#history","text":"","title":"History"},{"location":"history/#011-2020-09-20","text":"Refactoring of the repository. Added usage of linters for code-style checks. Improved CI.","title":"0.1.1 (2020-09-20)"},{"location":"history/#010-2020-04-04","text":"First release on PyPI.","title":"0.1.0 (2020-04-04)"}]}