[tox]
isolated_build = True
envlist = bandit, safety, check-copyright, black-check, isort-check, vulture, flake8, mypy, py3.9, docs
; pylint TODO add

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    pytest
    pytest-cov
    pytest-randomly
    ; Main dependencies
    gym
    numpy
    pygame>=2.0.0.dev6

commands =
    pytest --basetemp={envtmpdir} --doctest-modules \
        gym_sapientino tests/ \
        --cov=gym_sapientino \
        --cov-report=xml \
        --cov-report=html \
        --cov-report=term \
        {posargs}

[testenv:py3.9]
basepython = python3.9

[testenv:py3.10]
basepython = python3.10

[testenv:flake8]
skip_install = True
deps =
    flake8
    flake8-bugbear
    flake8-docstrings
    pydocstyle
commands =
    flake8 gym_sapientino tests scripts

[testenv:mypy]
skip_install = True
deps =
    mypy
commands =
    mypy --exclude scripts/whitelist.py gym_sapientino tests scripts

[testenv:pylint]
skipdist = True
deps = pylint
commands = pylint gym_sapientino tests scripts

[testenv:black]
skip_install = True
deps = black
commands = black gym_sapientino tests scripts

[testenv:black-check]
skip_install = True
deps = black
commands = black gym_sapientino tests scripts --check --verbose

[testenv:isort]
skip_install = True
deps = isort
commands = isort gym_sapientino tests scripts

[testenv:isort-check]
skip_install = True
deps = isort
commands = isort --check-only gym_sapientino tests scripts

[testenv:bandit]
skipsdist = True
skip_install = True
deps = bandit
commands = bandit -r gym_sapientino scripts

[testenv:safety]
skipsdist = True
skip_install = True
deps = safety
commands = safety

[testenv:docs]
skip_install = True
deps =
    mkdocs
    mkdocs-material
    markdown-include
    pymdown-extensions
    mkdocs-jupyter
    mkdocs-bibtex
commands =
    mkdocs build --clean

[testenv:docs-serve]
skip_install = True
deps =
    mkdocs
    mkdocs-material
    markdown-include
    pymdown-extensions
    mkdocs-jupyter
    mkdocs-bibtex
commands =
    mkdocs build --clean
    python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
    mkdocs serve

[testenv:check-copyright]
skip_install = True
deps =
commands = python3 scripts/check_copyright.py

[testenv:vulture]
skipsdist = True
skip_install = True
deps = vulture
commands = vulture gym_sapientino scripts/whitelist.py
